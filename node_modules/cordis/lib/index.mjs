var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// src/index.ts
import * as core from "@cordisjs/core";
import { LoggerService } from "@cordisjs/logger";
import { TimerService } from "@cordisjs/timer";
export * from "@cordisjs/core";
import { default as default2, default as default3 } from "schemastery";
import { Logger as Logger2 } from "@cordisjs/logger";
import { TimerService as TimerService2 } from "@cordisjs/timer";
var Context2 = class extends core.Context {
  static {
    __name(this, "Context");
  }
  baseDir;
  constructor(config) {
    super(config);
    this.baseDir = globalThis.process?.cwd() || "";
    this.provide("logger", void 0, true);
    this.provide("timer", void 0, true);
    this.plugin(LoggerService);
    this.plugin(TimerService);
  }
};
var Service2 = class extends core.Service {
  static {
    __name(this, "Service");
  }
  /** @deprecated use `this.ctx.logger` instead */
  logger;
  constructor(...args) {
    super(...args);
    this.logger = this.ctx.logger(this.name);
  }
  [core.Service.setup]() {
    this.ctx = new Context2();
  }
};
function src_default() {
}
__name(src_default, "default");
export {
  Context2 as Context,
  Logger2 as Logger,
  default2 as Schema,
  Service2 as Service,
  TimerService2 as TimerService,
  src_default as default,
  default3 as z
};
//# sourceMappingURL=index.mjs.map
