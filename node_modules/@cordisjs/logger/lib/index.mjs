var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// cordis/std/packages/logger/src/index.ts
import { Context } from "cordis";
import Logger from "reggol";
function apply(ctx) {
  ctx.root.baseDir = globalThis.process?.cwd() || "";
  ctx.provide("logger", void 0, true);
  ctx.logger = function(name) {
    return new Logger(name, { [Context.current]: this });
  };
  ctx.on("internal/error", function(format, ...args) {
    this.logger("app").error(format, ...args);
  });
  ctx.on("internal/warning", function(format, ...args) {
    this.logger("app").warn(format, ...args);
  });
}
__name(apply, "apply");
export {
  Logger,
  apply
};
