var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// koishi/plugins/database/sqlite/src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => src_default
});
module.exports = __toCommonJS(src_exports);
var import_koishi = require("koishi");
var import_driver_sqlite = require("@minatojs/driver-sqlite");
var import_promises = require("fs/promises");
var import_path = require("path");

// koishi/plugins/database/sqlite/src/locales/zh-CN.yml
var zh_CN_default = { path: "数据库路径。" };

// koishi/plugins/database/sqlite/src/index.ts
var logger = new import_koishi.Logger("sqlite");
var src_default = (0, import_koishi.defineDriver)(import_driver_sqlite.SQLiteDriver, import_koishi.Schema.object({
  path: import_koishi.Schema.path().default("data/koishi.db")
}).i18n({
  "zh-CN": zh_CN_default
}), async (ctx, config) => {
  if (config.path === ":memory:")
    return;
  config.path = (0, import_path.join)(ctx.baseDir, config.path);
  const oldPath = (0, import_path.join)(ctx.baseDir, ".koishi.db");
  if (await (0, import_promises.stat)(oldPath).catch(() => null)) {
    logger.info("migrating to data directory");
    await (0, import_promises.mkdir)((0, import_path.dirname)(config.path), { recursive: true });
    await (0, import_promises.rename)(oldPath, config.path);
  }
});
//# sourceMappingURL=index.js.map
