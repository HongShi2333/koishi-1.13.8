// koishi/plugins/database/sqlite/src/index.ts
import { defineDriver, Logger, Schema } from "koishi";
import { SQLiteDriver } from "@minatojs/driver-sqlite";
import { mkdir, rename, stat } from "fs/promises";
import { dirname, join } from "path";

// koishi/plugins/database/sqlite/src/locales/zh-CN.yml
var zh_CN_default = { path: "数据库路径。" };

// koishi/plugins/database/sqlite/src/index.ts
var logger = new Logger("sqlite");
var src_default = defineDriver(SQLiteDriver, Schema.object({
  path: Schema.path().default("data/koishi.db")
}).i18n({
  "zh-CN": zh_CN_default
}), async (ctx, config) => {
  if (config.path === ":memory:")
    return;
  config.path = join(ctx.baseDir, config.path);
  const oldPath = join(ctx.baseDir, ".koishi.db");
  if (await stat(oldPath).catch(() => null)) {
    logger.info("migrating to data directory");
    await mkdir(dirname(config.path), { recursive: true });
    await rename(oldPath, config.path);
  }
});
export {
  src_default as default
};
//# sourceMappingURL=index.mjs.map
