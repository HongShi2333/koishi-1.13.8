var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// external/webui/plugins/config/src/browser/index.ts
import { Schema } from "koishi";

// external/webui/plugins/config/src/browser/packages.ts
import * as shared from "../shared/index.mjs";
var PackageProvider2 = class extends shared.PackageProvider {
  static {
    __name(this, "PackageProvider");
  }
  async collect(forced) {
    return this.ctx.loader.market.objects;
  }
};

// external/webui/plugins/config/src/browser/index.ts
import { ConfigWriter, ServiceProvider } from "../shared/index.mjs";
export * from "../shared/index.mjs";
var name = "config";
var inject = ["console", "loader"];
var Config = Schema.object({});
function apply(ctx, config) {
  ctx.plugin(PackageProvider2);
  ctx.plugin(ConfigWriter);
  ctx.plugin(ServiceProvider);
  ctx.console.addEntry(process.env.KOISHI_BASE ? [
    process.env.KOISHI_BASE + "/dist/index.js",
    process.env.KOISHI_BASE + "/dist/style.css"
  ] : [
    // @ts-ignore
    import.meta.url.replace(/\/src\/[^/]+\/[^/]+$/, "/client/index.ts")
  ]);
}
__name(apply, "apply");
export {
  Config,
  apply,
  inject,
  name
};
//# sourceMappingURL=index.mjs.map
