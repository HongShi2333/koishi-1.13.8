var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });

// external/webui/plugins/market/src/browser/index.ts
import { Schema } from "koishi";

// external/webui/plugins/market/src/browser/market.ts
import { MarketProvider as BaseMarketProvider } from "../shared/index.mjs";
var MarketProvider = class extends BaseMarketProvider {
  static {
    __name(this, "MarketProvider");
  }
  async collect() {
    return this.ctx.loader.market;
  }
  async get() {
    const market = await this.prepare();
    if (!market)
      return { data: {}, failed: 0, total: 0, progress: 0 };
    return {
      data: Object.fromEntries(market.objects.map((item) => [item.package.name, item])),
      failed: 0,
      total: market.objects.length,
      progress: market.objects.length
    };
  }
};

// external/webui/plugins/market/src/browser/index.ts
export * from "../shared/index.mjs";
var filter = false;
var name = "market";
var inject = ["console"];
var Config = Schema.object({});
function apply(ctx, config) {
  ctx.plugin(MarketProvider);
  ctx.console.addEntry(process.env.KOISHI_BASE ? [
    process.env.KOISHI_BASE + "/dist/index.js",
    process.env.KOISHI_BASE + "/dist/style.css"
  ] : [
    // @ts-ignore
    import.meta.url.replace(/\/src\/[^/]+\/[^/]+$/, "/client/index.ts")
  ]);
}
__name(apply, "apply");
export {
  Config,
  MarketProvider,
  apply,
  filter,
  inject,
  name
};
//# sourceMappingURL=index.mjs.map
